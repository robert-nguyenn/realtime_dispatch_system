spring:
  application:
    name: dispatch-api
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/dispatch_db
    username: dispatch_user
    password: dispatch_pass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Flyway
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      properties:
        enable.idempotence: true
    consumer:
      group-id: dispatch-api
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.dispatch.api.dto.events"
        auto.offset.reset: earliest
  
  # Security Configuration
  security:
    user:
      name: admin
      password: admin
      roles: ADMIN

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

# Application Configuration
app:
  geo-index:
    host: localhost
    port: 50051
    timeout: 5s
  
  feature-flags:
    api-url: http://localhost:3001/api
    enabled: true
  
  kafka:
    topics:
      ride-events: ride-events
      driver-locations: driver-locations
      ride-assignments: ride-assignments
  
  matching:
    max-search-radius-km: 10
    max-drivers-to-consider: 10
    assignment-timeout-seconds: 30

# Logging Configuration
logging:
  level:
    com.dispatch: DEBUG
    org.springframework.kafka: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type.descriptor.sql.BasicBinder: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/dispatch-api.log

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
